<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Gaurang Bhatnagar</title>
    <link>https://offsec.space/posts/</link>
    <description>Recent content in Posts on Gaurang Bhatnagar</description>
    <image>
      <url>https://offsec.space/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://offsec.space/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 25 Sep 2023 00:01:03 +0000</lastBuildDate><atom:link href="https://offsec.space/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Beyond Base64: The Vulnerability Leaving Millions of Calls Exposed</title>
      <link>https://offsec.space/posts/beyond-base64/</link>
      <pubDate>Mon, 25 Sep 2023 00:01:03 +0000</pubDate>
      
      <guid>https://offsec.space/posts/beyond-base64/</guid>
      <description>Time and again, we&amp;rsquo;re reminded that mere encoding doesn&amp;rsquo;t equate to robust encryption or security. Relying primarily on encoding as a defense can expose companies to unexpected vulnerabilities. While encoding can help obscure information, it&amp;rsquo;s crucial to remember it&amp;rsquo;s not a substitute for genuine encryption or tight access control.
This recent lapse came to light in a popular online consulting platform&amp;rsquo;s mobile app, available on both Android and iOS.
As the focus of this blog article is educational, centered around the vulnerability, I will abstain from naming the organization.</description>
    </item>
    
    <item>
      <title>Multiple Vulnerabilities found in Airtel Android Application</title>
      <link>https://offsec.space/posts/airtel-vulnerabilities/</link>
      <pubDate>Sun, 27 Nov 2022 01:30:03 +0000</pubDate>
      
      <guid>https://offsec.space/posts/airtel-vulnerabilities/</guid>
      <description>Before presenting my talk at SourceZeroCon on Deep Dive into Android Static Analysis, I spent a lot of time understanding WebViews and looked for vulnerable implementations in popular Android applications (mainly applications with 100M+ downloads). One such application was Airtel Thanks where I identified a number of vulnerabilities. This blog post discusses about the high impact vulnerabilities that were reported.
Airtel has fixed these vulnerabilities and it is recommended to update Airtel Thanks application to the latest version from Play Store.</description>
    </item>
    
    <item>
      <title>Introducing InsecureShop</title>
      <link>https://offsec.space/posts/introducing-insecureshop/</link>
      <pubDate>Sat, 18 Dec 2021 11:30:03 +0000</pubDate>
      
      <guid>https://offsec.space/posts/introducing-insecureshop/</guid>
      <description>About InsecureShop InsecureShop is an intentionally designed vulnerable Android application built in Kotlin.
The aim of creating this application is to teach developers and security professionals about the vulnerabilities present in modern Android applications. This also serves as a platform to test your Android pentesting skills.
The InsecureShop project was released as part of the SourceZeroCon 2021 (Slides | Video).
You can checkout the project here: https://www.insecureshopapp.com
Research In early 2020, I started my research on Android WebView and how loading an untrusted URL in applications&amp;rsquo; WebView can lead to the exfiltration of session cookies and local storage files by leveraging symlink attacks and insecure WebView properties.</description>
    </item>
    
    <item>
      <title>Pentesting an IOT based Biometric Attendance device</title>
      <link>https://offsec.space/posts/pentesting-iot-biometric/</link>
      <pubDate>Sat, 30 Oct 2021 11:30:03 +0000</pubDate>
      
      <guid>https://offsec.space/posts/pentesting-iot-biometric/</guid>
      <description>During one of the Red Team engagements, I got a chance to pentest a Biometric attendance device that the client often used to mark the attendance and restrict access to specific rooms.
I did not pop any zero-days here, but several misconfigurations were leveraged that allowed me to achieve root access on the device.
Following is the snapshot of the device I was testing.
Starting with the assessment, I found that the device was connected to the network, and I was able to get its IP address from the deviceâ€™s network settings.</description>
    </item>
    
  </channel>
</rss>
